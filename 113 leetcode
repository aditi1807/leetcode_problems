/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>>ans=new ArrayList<>();
    public void solve(List<Integer> temp,TreeNode root, int target,int sum)
    {
        temp.add(root.val);
        sum+=root.val;
        if(root.left==null && root.right==null)
        {
            System.out.println(temp);
            if(sum==target)
            ans.add(new ArrayList<>(temp));
            temp.remove(temp.size()-1);
            return;
        }
        if(root.left!=null)
        solve(temp,root.left,target,sum);
        if(root.right!=null)
        solve(temp,root.right,target,sum);
        temp.remove(temp.size()-1);

    }
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer>arr=new ArrayList<>();
        if(root==null)
        return ans;
        solve(arr,root,targetSum,0);
        return ans;
    }
}